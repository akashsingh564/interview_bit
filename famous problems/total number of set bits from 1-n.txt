//http://www.geeksforgeeks.org/count-total-set-bits-in-all-numbers-from-1-to-n/
#include <bits/stdc++.h>
using namespace std;

unsigned int getLeftmostBit (int n){
    int m = 0;
    while (n > 1){
    	n = n >> 1;
    	m++;
    }
    return m;
}

unsigned int _countSetBits(unsigned int n){
	if (n == 0)
	    return 0;
	int m = getLeftmostBit (n);

	// If n is of the form 2^x-1, i.e., if n is like 1, 3, 7, 15, 31,.. etc, 
	if (n == ((unsigned int)1<<(m+1))-1)
		return (unsigned int)(m+1)*(1<<m);

	// update n for next recursive call
	n = n - (1<<m);
	return (n+1) + countSetBits(n) + m*(1<<(m-1));
}

int main(){
    int n = 17;
    printf ("Total set bit count is %d", _countSetBits(n));
    return 0;
}
