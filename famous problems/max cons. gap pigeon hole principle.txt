int Solution::maximumGap(const vector<int> &A) {
    map <int,bool>m;
    int mini=INT_MAX;
    int maxi=INT_MIN;
    int ans=INT_MIN;
    int n=A.size();
    if(n<2)
        return 0;
    for(int i=0;i<A.size();i++){
        maxi=max(maxi,A[i]);
        mini=min(mini,A[i]);
    }
    int bmax [n-1], bmin[n-1];
    for(int i=0;i<n-1;i++){
        bmin[i]=INT_MAX;
        bmax[i]=INT_MIN;
    }
    float bucket_size=((float)(maxi-mini))/((float)(n-1));
    for(int i=0;i<n;i++){
        if(A[i]==mini || A[i]==maxi)
            continue;
        int index=(A[i]-mini)/bucket_size;
        bmax[index]=max(bmax[index],A[i]);
        bmin[index]=min(bmin[index],A[i]);
    }
    int prev=mini;
    for(int i=0;i<n-1;i++){
        //cout<<i<<" "<<bmin[i]<<" "<<bmax[i]<<endl;
        if(bmax[i]==INT_MIN)
            continue;
        ans=max(ans,bmin[i]-prev);
        prev=bmax[i];
    }
    ans=max(ans,maxi-prev);
    return ans;
}
