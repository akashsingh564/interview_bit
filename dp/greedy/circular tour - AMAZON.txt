int Solution::canCompleteCircuit(const vector<int> &gas, const vector<int> &cost) {
    int n=gas.size();
    int start=0, end=1;
    /*int cur_gas=gas[start]-cost[start];
    while(start!=end || cur_gas<0){
        while(start!=end && cur_gas<0){
            cur_gas-=gas[start]-cost[start];
            start=(start+1)%n;
            if(start==0)
                return -1;
        }
        cur_gas+=gas[end]-cost[end];
        end=(end+1)%n;
    }
    return start;*/
    
    int total_gas=0, total_cost=0, cur_gas=0;
    for(int i=0;i<gas.size();i++){
        total_gas+=gas[i];
        total_cost+=cost[i];
        cur_gas+=gas[i]-cost[i];
        if(cur_gas<0){
            cur_gas=0;
            start=i+1;
        }
    }
    if(total_gas<total_cost)
        return -1;
    return start;
    
}