int Solution::maxProduct(const vector<int> &A) {
    int ans=A[0], mini=A[0], maxi=A[0];
    for(int i=1;i<A.size();i++){
        if(A[i]<0)
            swap(maxi,mini);
        maxi=max(A[i],maxi*A[i]);
        mini=min(A[i],mini*A[i]);
        ans=max(ans,maxi);
    }
    return ans;
    
    
    
    
    
    /*if(A.size()==1)
        return A[0];
    int max_ending_here=1, min_ending_here=1, max_so_far=1, pos_count=0;
    for(int i=0;i<A.size();i++){
        if(A[i]==0){
            max_ending_here=1;
            min_ending_here=1;
        }
        else if(A[i]>0){
            max_ending_here*=A[i];
            min_ending_here=min(min_ending_here*A[i],1);
            pos_count++;
        }
        else{
            int temp=max_ending_here;
            max_ending_here=max(min_ending_here*A[i],1);
            min_ending_here=temp*A[i];
        }
        max_so_far=max(max_so_far,max_ending_here);
    }
    if(!pos_count && max_so_far==1)
        return 0;
    return max_so_far;*/
}
