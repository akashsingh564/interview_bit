//https://codevillage.wordpress.com/2016/09/06/mastering-dynamic-programming-2/

int Solution::arrange(string A, int B) {
    int n=A.size();
    if(n<B)
       return -1;
    int black=0, white=0;
    int dp[n][B];
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<n;i++){
        if(A[i]=='B')
            black++;
        else
            white++;
        dp[i][0]=black*white;
    }
    for(int i=1;i<B;i++){
        for(int j=0;j<n;j++){
            if(i>j)
                continue;
            else{
                int minval=INT_MAX, b=0, w=0;
                for(int k=j-1;k>=0;k--){
                    if(A[k+1]=='B')
                        b++;
                    else
                        w++;
                    if(dp[k][i-1]+(b*w)>=0)
                        minval=min(minval,(dp[k][i-1]+(b*w)));
                }
                dp[j][i]=minval;
            }
        }
    }
    return (dp[n-1][B-1]> 0 ? dp[n - 1][B - 1] : 0);
}
