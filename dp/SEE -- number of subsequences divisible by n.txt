//http://www.geeksforgeeks.org/number-subsequences-string-divisible-n/

#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007

int dp[1000005][15];
int t;
string s;

int main(){
    int n=6;
    cin>>t;
    while(t--){
        memset(dp,0,sizeof(dp));
        cin>>s;
        int len=s.size();
        
        //including only first number
        dp[0][(s[0]-'0')%n]++;
        
        for(int i=1;i<len;i++){
            //starting a new sequence with s[i]
            dp[i][(s[i]-'0')%n]=(1 + dp[i][(s[i]-'0')%n])%MOD;
            
            for(int j=0;j<n;j++){
                //not including s[i] in current sequence
                dp[i][j]=(dp[i-1][j] + dp[i][j])%MOD;
                
                //including s[i] in current sequence 
                //new r=((r*10)+digit)%n
                dp[i][((j*10)+(s[i]-'0'))%n]=(dp[i-1][j] + dp[i][((j*10)+(s[i]-'0'))%n])%MOD;
            }
        }
        
        cout<<dp[len-1][0]<<endl;
    }
    return 0;
}
