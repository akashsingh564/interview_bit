int Solution::maxProfit(const vector<int> &A) {
    int k=2;
    int n=A.size();
    if(k==0 || n<2)
        return 0;
    int dp[k+1][n];
    memset(dp,0,sizeof(dp));
    for(int i=1;i<=k;i++){
        int max_diff=dp[i-1][0]-A[0];
        for(int j=1;j<n;j++){
            dp[i][j]=max(dp[i][j-1],A[j]+max_diff);
            max_diff=max(max_diff,dp[i-1][j]-A[j]);
        }
    }
    return dp[k][n-1];
}
