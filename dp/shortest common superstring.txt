int find_max_overlap(string x, string y, string &str){
    int res=INT_MIN;
    int len1=x.size(), len2=y.size();
    //prefix of x compared with suffix of y
    for(int i=1;i<=min(len1,len2);i++){
        if(x.compare(0,i,y,len2-i,i)==0){
            if(i>res){
                res=i;
                str=y+x.substr(i);
            }
        }
    }
    //prefix of y compared with suffix of x
    for(int i=1;i<=min(len1,len2);i++){
        if(x.compare(len1-i,i,y,0,i)==0){
            if(i>res){
                res=i;
                str=x+y.substr(i);
            }
        }
    }
    return res;
}

int Solution::solve(vector<string> &A) {
    int len=A.size();
    while(len!=1){
        int max=INT_MIN;
        int l,r;
        string res_str;
        //for current A, find pair of strings with maximum overlap
        for(int i=0;i<len;i++){
            for(int j=i+1;j<len;j++){
                string str;
                int res=find_max_overlap(A[i],A[j],str);
                if(res>max){
                    max=res;
                    l=i;
                    r=j;
                    res_str.assign(str);
                }
            }
        }
        len--;
        if(max==INT_MIN)
            A[0]+=A[len];
        else{
            A[l]=res_str;
            A[r]=A[len];
        }
    }
    return A[0].size();
}
