//https://www.hackerearth.com/practice/algorithms/graphs/shortest-path-algorithms/practice-problems/algorithm/wifi-routers/description/
#include <bits/stdc++.h>
using namespace std;

int t,n,m,a,b;
vector <int> x,y,c;
int d[505][505];

int main(){
    cin>>t;
    while(t--){
        x.clear();
        y.clear();
        c.clear();
        memset(d,0,sizeof(d));
        
        cin>>n>>m;
        for(int i=0;i<n;i++){
            cin>>a>>b;
            x.push_back(a);
            y.push_back(b);
            c.push_back(1);
        }
        for(int i=0;i<m;i++){
            cin>>a>>b;
            x.push_back(a);
            y.push_back(b);
            c.push_back(0);
        }
        
        int s=n+m; 
        for(int i=0;i<s;i++)
            for(int j=0;j<s;j++)
                d[i][j]=pow((x[i]-x[j]),2)+pow((y[i]-y[j]),2);
        
        for(int k=0;k<s;k++)
            if(c[k]==0)
                for(int i=0;i<s;i++)
                    for(int j=0;j<s;j++)
                        d[i][j]=min(d[i][j],max(d[i][k],d[k][j]));
                    
        int ans=INT_MIN;
        for(int i=0;i<s;i++)
            for(int j=0;j<s;j++)
                if(c[i]==0 && c[j]==1)
                    ans=max(ans,d[i][j]);
                    
        printf("%0.6f\n",sqrt(ans));
        
    }
    return 0;
}
